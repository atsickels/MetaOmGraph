variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
variables:
  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
    -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true
  MAVEN_CLI_OPTS: >-
    --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true
    -DdeployAtEnd=true

image: openjdk:17-bullseye

cache:
  paths:
    - .m2/repository
    - $CI_PROJECT_DIR/src/lib/
    - apt-cache/

stages:
  - build
  - package

build-app:
  stage: build
  before_script:
    - apt update && apt -o dir::cache::archives="apt-cache" install sudo maven file unzip zip python3-pip -y
  script: 
    - bash scripts/build.sh
# artifacts:
#   paths:
#     - ./target/metaomgraph4*.jar


package-archive:
  stage: package
  script: 
    - bash scripts/package.sh
    - cp {metaomgraph4-latest,metaomgraph4-all-$CI_COMMIT_REF_SLUG}.tar.gz
    - cp {metaomgraph4-latest,metaomgraph4-all-$CI_COMMIT_REF_SLUG}.zip
  artifacts:
    paths:
      - metaomgraph4-all-$CI_COMMIT_REF_SLUG*
  dependencies:
    - build-app

